from graphics import*
from random import*
from time import*
from math import sqrt




win = GraphWin('My Program', 600, 600)
win.setBackground('pink')
my_circle = Circle(Point(200,300),30)
my_circle.setFill('grey')
my_circle.setOutline('magenta')
my_circle.draw(win)

my_circle_2 = Circle(Point(400, 500), 30)
my_circle_2.setFill('black')
my_circle_2.setOutline('yellow')
my_circle_2.draw(win)

my_circle_3 = Circle(Point(100, 250), 30)
my_circle_3.setFill('grey')
my_circle_3.setOutline('magenta')
my_circle_3.draw(win)

my_circle_4 = Circle(Point(80, 60), 30)
my_circle_4.setFill('black')
my_circle_4.setOutline('yellow')
my_circle_4.draw(win)

my_circle_5 = Circle(Point(120, 140), 30)
my_circle_5.setFill('black')
my_circle_5.setOutline('yellow')
my_circle_5.draw(win)

vel_x = randint(-30,30)
vel_y = randint(-30,30)

vel_x2 = randint(-30,30)
vel_y2 = randint(-30,30)

vel_x3 = randint(-30,30)
vel_y3 = randint(-30,30)

vel_x4 = randint(-30,30)
vel_y4 = randint(-30,30)

vel_x5 = randint(-30,30)
vel_y5 = randint(-30,30)

key = win.checkKey()
while key == '':

#circle 1
    my_circle.move(vel_x, vel_y)
    sleep(0.03)

    find_center = my_circle.getCenter()
    center_x = find_center.getX()
    center_y = find_center.getY()

    if ((center_x - 30) <= 0) or ((center_x + 30) >= 600):
        vel_x = -vel_x

    if ((center_y - 30) <= 0) or ((center_y + 30) >= 600):
        vel_y = -vel_y

#circle 2
    my_circle_2.move(vel_x2, vel_y2)
    sleep(0.03)

    find_center2 = my_circle_2.getCenter()
    center_x2 = find_center2.getX()
    center_y2 = find_center2.getY()

    if ((center_x2 - 30) <= 0) or ((center_x2 + 30) >= 600):
        vel_x2 = -vel_x2

    if ((center_y2 - 30) <= 0) or ((center_y2 + 30) >= 600):
        vel_y2 = -vel_y2

# circle 3
    my_circle_3.move(vel_x3, vel_y3)
    sleep(0.03)

    find_center3 = my_circle_3.getCenter()
    center_x3 = find_center3.getX()
    center_y3 = find_center3.getY()

    if ((center_x3 - 30) <= 0) or ((center_x3 + 30) >= 600):
        vel_x3 = -vel_x3

    if ((center_y3 - 30) <= 0) or ((center_y3 + 30) >= 600):
        vel_y3 = -vel_y3

#circle 4
    my_circle_4.move(vel_x4, vel_y4)
    sleep(0.03)

    find_center4 = my_circle_4.getCenter()
    center_x4 = find_center4.getX()
    center_y4 = find_center4.getY()

    if ((center_x4 - 30) <= 0) or ((center_x4 + 30) >= 600):
        vel_x4 = -vel_x4

    if ((center_y4 - 30) <= 0) or ((center_y4 + 30) >= 600):
        vel_y4 = -vel_y4

#circle 5
    my_circle_5.move(vel_x5, vel_y5)
    sleep(0.03)

    find_center5 = my_circle_5.getCenter()
    center_x5 = find_center5.getX()
    center_y5 = find_center5.getY()

    if ((center_x5 - 30) <= 0) or ((center_x5 + 30) >= 600):
        vel_x5 = -vel_x5

    if ((center_y5 - 30) <= 0) or ((center_y5 + 30) >= 600):
        vel_y5 = -vel_y5


#Circles bouncing off each other
    def circleDistance(cir1, cir2):
        center1 = cir1.getCenter()
        center2 = cir2.getCenter()
        x1 = center1.getX()
        y1 = center1.getY()
        x2 = center2.getX()
        y2 = center2.getY()
        dist = sqrt((x2-x1) * (x2-x1) + (y2-y1) * (y2-y1))
        return dist

    if circleDistance(my_circle, my_circle_2) <= 60:
        vel_x = -vel_x
        vel_y = -vel_y
        vel_x2 = -vel_x2
        vel_y2 = -vel_y2

    if circleDistance(my_circle, my_circle_3) <= 60:
        vel_x = -vel_x
        vel_y = -vel_y
        vel_x3 = -vel_x3
        vel_y3 = -vel_y3

    if circleDistance(my_circle_2, my_circle_3) <= 60:
        vel_x2= -vel_x2
        vel_y2 = -vel_y2
        vel_x3 = -vel_x3
        vel_y3 = -vel_y3

    if circleDistance(my_circle, my_circle_4) <= 60:
        vel_x = -vel_x
        vel_y = -vel_y
        vel_x4 = -vel_x4
        vel_y4 = -vel_y4

    if circleDistance(my_circle_2, my_circle_4) <= 60:
        vel_x2 = -vel_x2
        vel_y2 = -vel_y2
        vel_x4 = -vel_x4
        vel_y4 = -vel_y4

    if circleDistance(my_circle_3, my_circle_4) <= 60:
        vel_x3 = -vel_x3
        vel_y3 = -vel_y3
        vel_x4 = -vel_x4
        vel_y4 = -vel_y4

    if circleDistance(my_circle, my_circle_5) <= 60:
        vel_x = -vel_x
        vel_y = -vel_y
        vel_x5 = -vel_x5
        vel_y5 = -vel_y5

    if circleDistance(my_circle_2, my_circle_5) <= 60:
        vel_x2 = -vel_x2
        vel_y2 = -vel_y2
        vel_x5 = -vel_x5
        vel_y5 = -vel_y5

    if circleDistance(my_circle_3, my_circle_5) <= 60:
        vel_x3 = -vel_x3
        vel_y3 = -vel_y3
        vel_x5 = -vel_x5
        vel_y5 = -vel_y5

    if circleDistance(my_circle_4, my_circle_5) <= 60:
        vel_x4 = -vel_x4
        vel_y4 = -vel_y4
        vel_x5 = -vel_x5
        vel_y5 = -vel_y5

    key = win.checkKey()
